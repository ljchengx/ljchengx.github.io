<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.ljchengx.cn/"/>
  <updated>2020-03-21T08:13:37.212Z</updated>
  <id>http://www.ljchengx.cn/</id>
  
  <author>
    <name>ljchengx</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android处理Cookie过期静默更新</title>
    <link href="http://www.ljchengx.cn/2020/03/21/Android%E5%A4%84%E7%90%86Cookie%E8%BF%87%E6%9C%9F%E9%9D%99%E9%BB%98%E6%9B%B4%E6%96%B0/"/>
    <id>http://www.ljchengx.cn/2020/03/21/Android%E5%A4%84%E7%90%86Cookie%E8%BF%87%E6%9C%9F%E9%9D%99%E9%BB%98%E6%9B%B4%E6%96%B0/</id>
    <published>2020-03-21T07:44:34.000Z</published>
    <updated>2020-03-21T08:13:37.212Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><h4 id="1-问题描述："><a href="#1-问题描述：" class="headerlink" title="1.问题描述："></a>1.问题描述：</h4><p>​ 项目中在请求接口时在header上带上Cookie信息 一直没有处理过期时间，最近需要在原来的基础上添加请求Cookie过期后静默更新的功能。目前使用的是retrofit2+okhttp3+rxjava2的网络框架。</p><h4 id="2-解决思路："><a href="#2-解决思路：" class="headerlink" title="2.解决思路："></a>2.解决思路：</h4><p>​ 因为添加Cookie使用的是Okhttp3的拦截器处理的方式 需要准备在之前的Interceptor上面改造，其实处理起来也不是很复杂，需要确定的思路是在请求是做统一拦截，根据和服务端约定好的规则来判断是否处理Cookie过期，如果过期之前需要在同步请求一个新的接口拿到最新的Cookie信息放到原来的请求上，重新完成请求。</p><h4 id="3-遇到的问题："><a href="#3-遇到的问题：" class="headerlink" title="3.遇到的问题："></a>3.遇到的问题：</h4><p>需要和服务端协调好规则，如何判断失效，同时需要注意要重写一个新的请求</p><h4 id="4-解决方式："><a href="#4-解决方式：" class="headerlink" title="4.解决方式："></a>4.解决方式：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddCookiesInterceptor</span> <span class="keyword">implements</span> <span class="title">Interceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Handler mHandler = <span class="keyword">new</span> Handler();</span><br><span class="line">    <span class="keyword">private</span> String resultStr;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AddCookiesInterceptor</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.context = context;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Response <span class="title">intercept</span><span class="params">(Chain chain)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        Request.Builder builder = chain.request().newBuilder();</span><br><span class="line">        <span class="comment">//这里使用本地存的cookie来添加到每个请求的header 方式有很多  如本地数据库保存 这里举一个例子</span></span><br><span class="line">        String cookie = CookieSp.get();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(cookie)) &#123;</span><br><span class="line">            builder.addHeader(<span class="string">"Cookie"</span>, cookie);</span><br><span class="line">        &#125;</span><br><span class="line">        Request request = builder.build();</span><br><span class="line">        Response response = chain.proceed(request);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断是否Cookie过期</span></span><br><span class="line">        <span class="keyword">if</span> (isCookieExpired(response)) &#123;</span><br><span class="line"></span><br><span class="line">            KLog.e(<span class="string">"AddCookiesInterceptor"</span>, <span class="string">"无感刷新Cookie,然后重新请求数据"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//同步请求方式，获取最新的Cookie</span></span><br><span class="line">            String newCookie = getNewCookie();</span><br><span class="line">            KLog.e(<span class="string">"AddCookiesInterceptor"</span>, newCookie+<span class="string">"新Cookie"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//使用新的Cookie，创建新的请求</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> != newCookie &amp;&amp; newCookie.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                Request newRequest = chain.request()</span><br><span class="line">                        .newBuilder()</span><br><span class="line">                        .header(<span class="string">"Cookie"</span>, newCookie)</span><br><span class="line">                        .build();</span><br><span class="line">                <span class="comment">//重新请求上次的接口</span></span><br><span class="line">                <span class="keyword">return</span> chain.proceed(newRequest.newBuilder().build());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> chain.proceed(request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  获取新的Cookie</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getNewCookie</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据服务端约定好的新接口 获取新的Cookie</span></span><br><span class="line">        String url = HttpConstant.BASE_URL + <span class="string">"/api/login/newlogin?userName=123&amp;pwd=123"</span>;</span><br><span class="line"></span><br><span class="line">        KLog.e(<span class="string">"AddCookiesInterceptor"</span>, <span class="string">"重新请求---"</span> + url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//新建立一个请求</span></span><br><span class="line">        HttpsUtils.SSLParams sslParams = HttpsUtils.getSslSocketFactory();</span><br><span class="line">        OkHttpClient client =  <span class="keyword">new</span> OkHttpClient.Builder()</span><br><span class="line">                .hostnameVerifier(HttpsUtils.UnSafeHostnameVerifier)</span><br><span class="line">                .sslSocketFactory(sslParams.sSLSocketFactory, sslParams.trustManager)</span><br><span class="line">                .connectionPool(<span class="keyword">new</span> ConnectionPool(<span class="number">8</span>, <span class="number">10</span>, TimeUnit.SECONDS))</span><br><span class="line">                .build();</span><br><span class="line">        Request request = <span class="keyword">new</span> Request.Builder().url(url).build();</span><br><span class="line">        okhttp3.Call call = client.newCall(request);</span><br><span class="line">        StringBuffer cookie = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Response response = call.execute();</span><br><span class="line">            RequestCode data = <span class="keyword">new</span> Gson().fromJson(response.body().string(), RequestCode<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//这里根据约定好的规则获取新的Cookie 这里是根据头部信息拿到新的Cookie 保存在本地</span></span><br><span class="line">            <span class="keyword">if</span> (data.getCode() == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!response.headers(<span class="string">"Set-Cookie"</span>).isEmpty()) &#123;</span><br><span class="line">                    List&lt;String&gt; list = response.headers(<span class="string">"Set-Cookie"</span>);</span><br><span class="line">                    <span class="keyword">for</span> (String str :</span><br><span class="line">                            list) &#123;</span><br><span class="line">                        cookie.append(str).append(<span class="string">";"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    CookieSp.put(cookie.toString());</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                KLog.e(<span class="string">"AddCookiesInterceptor"</span>, <span class="string">"新Cookie获取失败---退出登录"</span> );</span><br><span class="line">                AppManager.getAppManager().finishAllActivity();</span><br><span class="line">                <span class="comment">//这里处理你的退出重新登录的逻辑</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            KLog.e(<span class="string">"AddCookiesInterceptor"</span>,e.toString());</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cookie.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  根据返回值判断Cookie是否过期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isCookieExpired</span><span class="params">(Response response)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            resultStr = response.body().string();</span><br><span class="line">            RequestCode requestCode = <span class="keyword">new</span> Gson().fromJson(resultStr, RequestCode<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            KLog.e(<span class="string">"AddCookiesInterceptor"</span>, requestCode.getCode() + <span class="string">"----requestCode"</span>);</span><br><span class="line">            <span class="comment">//根据服务端约定的规则来判断是否过期</span></span><br><span class="line">            <span class="keyword">if</span> (requestCode.getCode() == -<span class="number">300</span>) &#123;</span><br><span class="line">                KLog.e(<span class="string">"AddCookiesInterceptor"</span>, <span class="string">"----requestCode,Cookie登录过期了"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-参考链接："><a href="#5-参考链接：" class="headerlink" title="5.参考链接："></a>5.参考链接：</h4><ul><li><a href="https://www.jianshu.com/p/66b59ad1fdc1" target="_blank" rel="noopener">https://www.jianshu.com/p/66b59ad1fdc1</a></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;h4 id=&quot;1-问题描述：&quot;&gt;&lt;a href=&quot;#1-问题描述：&quot; class=&quot;headerlink&quot; title=&quot;1.问题描述：&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
    
      <category term="Android" scheme="http://www.ljchengx.cn/categories/Android/"/>
    
    
      <category term="Android" scheme="http://www.ljchengx.cn/tags/Android/"/>
    
      <category term="Cookie" scheme="http://www.ljchengx.cn/tags/Cookie/"/>
    
      <category term="拦截器" scheme="http://www.ljchengx.cn/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>项目整合管理</title>
    <link href="http://www.ljchengx.cn/2020/03/21/%E9%A1%B9%E7%9B%AE%E6%95%B4%E5%90%88%E7%AE%A1%E7%90%86/"/>
    <id>http://www.ljchengx.cn/2020/03/21/%E9%A1%B9%E7%9B%AE%E6%95%B4%E5%90%88%E7%AE%A1%E7%90%86/</id>
    <published>2020-03-21T06:42:46.000Z</published>
    <updated>2020-03-21T06:45:44.214Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><h1 id="项目整合管理"><a href="#项目整合管理" class="headerlink" title="项目整合管理"></a>项目整合管理</h1><blockquote><p><em>整合管理包括对隶属于项目管理过程组的各种过程和项目管理活动进行识别、定义、组合、统一和协调的各个过程。 在项目管理中，整合兼具统一、合并、沟通和建立联系的性质，这些行动应该贯穿项目始终。</em></p></blockquote><p><img src="https://s1.ax1x.com/2020/03/21/8Wb3Tg.jpg" alt="8Wb3Tg.jpg"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;项目整合管理&quot;&gt;&lt;a href=&quot;#项目整合管理&quot; class=&quot;headerlink&quot; title=&quot;项目整合管理&quot;&gt;&lt;/a&gt;项目整
      
    
    </summary>
    
    
      <category term="PMP" scheme="http://www.ljchengx.cn/categories/PMP/"/>
    
    
      <category term="项目整合" scheme="http://www.ljchengx.cn/tags/%E9%A1%B9%E7%9B%AE%E6%95%B4%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>项目经理角色</title>
    <link href="http://www.ljchengx.cn/2020/03/21/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E7%90%86%E8%A7%92%E8%89%B2/"/>
    <id>http://www.ljchengx.cn/2020/03/21/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E7%90%86%E8%A7%92%E8%89%B2/</id>
    <published>2020-03-21T06:19:36.000Z</published>
    <updated>2020-03-21T06:36:52.038Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><h1 id="项目经理角色"><a href="#项目经理角色" class="headerlink" title="项目经理角色"></a>项目经理角色</h1><blockquote><p><em>项目经理的角色不同于职能经理和运营经理</em> <em>项目经理是由执行组织委派，领导团队实现项目目标的个人。</em></p></blockquote><h2 id="1-项目经理的胜任力"><a href="#1-项目经理的胜任力" class="headerlink" title="1. 项目经理的胜任力"></a>1. 项目经理的胜任力</h2><p><img src="https://s1.ax1x.com/2020/03/21/8WTAoj.jpg" alt="8WTAoj.jpg"></p><h2 id="2-领导力与管理之比较"><a href="#2-领导力与管理之比较" class="headerlink" title="2. 领导力与管理之比较"></a>2. 领导力与管理之比较</h2><table><thead><tr><th>管理</th><th>领导</th></tr></thead><tbody><tr><td>直接利用权力</td><td>利用关系权力来指导 影响和合作</td></tr><tr><td>维护</td><td>发展</td></tr><tr><td>管理</td><td>创新</td></tr><tr><td>关注系统和架构</td><td>关注人际关系</td></tr><tr><td>依赖控制</td><td>激发信任</td></tr><tr><td>关注近期目标</td><td>关注长期愿景</td></tr><tr><td>了解方式和时间</td><td>了解情况和原因</td></tr><tr><td>关注赢利</td><td>关注前景</td></tr><tr><td>接受现状</td><td>挑战现状</td></tr><tr><td>正确的做事</td><td>做正确的事</td></tr><tr><td>关注操作层面的问题及解决</td><td>关注愿景一致性 动力和激励</td></tr></tbody></table><h2 id="3-项目经理多种领导力风格"><a href="#3-项目经理多种领导力风格" class="headerlink" title="3. 项目经理多种领导力风格"></a>3. 项目经理多种领导力风格</h2><ol><li>放任型领导 允许团队自主决策和设定目标 又被称为甩手型</li><li>交易型领导 根据目标、反馈和成就给予奖励</li><li>服务型领导 做出服务承诺 处处先为他人着想 关注他人成长 学习 发展 关注人际关系 社区与合作 服务优先于领导</li><li>变革型领导 通过理想化特质和行为 鼓励性激励 促进创新和改造 以及个人关怀提高追随者的能力</li><li>魅力型领导 激励他人 精神饱满 热情洋溢 充满自信 说服力强</li><li>交互型领导 结合了交易型 变革型 魅力型的特点</li></ol><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;项目经理角色&quot;&gt;&lt;a href=&quot;#项目经理角色&quot; class=&quot;headerlink&quot; title=&quot;项目经理角色&quot;&gt;&lt;/a&gt;项目经
      
    
    </summary>
    
    
      <category term="PMP" scheme="http://www.ljchengx.cn/categories/PMP/"/>
    
    
      <category term="项目经理" scheme="http://www.ljchengx.cn/tags/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>2020年1月30日闲聊</title>
    <link href="http://www.ljchengx.cn/2020/01/30/2020%E5%B9%B41%E6%9C%8830%E6%97%A5%E9%97%B2%E8%81%8A/"/>
    <id>http://www.ljchengx.cn/2020/01/30/2020%E5%B9%B41%E6%9C%8830%E6%97%A5%E9%97%B2%E8%81%8A/</id>
    <published>2020-01-30T05:47:58.000Z</published>
    <updated>2020-01-30T06:50:12.888Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><h1 id="2020年1月30日闲聊"><a href="#2020年1月30日闲聊" class="headerlink" title="2020年1月30日闲聊"></a>2020年1月30日闲聊</h1><h2 id="Chapter-1"><a href="#Chapter-1" class="headerlink" title="Chapter 1"></a>Chapter 1</h2><p>&ensp;&ensp;&ensp;&ensp;今天是2020年1月30日也是大年初六，本来今天按照往年的日程安排是踏上返程的一天，也是春节假期的最后一天，可是现在我却坐在家里，对着电脑写下这篇文章。</p><p>&ensp;&ensp;&ensp;&ensp;时间回到放假的前一天，一月二十二日也就是腊月二十八，按照往常的时间在八点十分左右到了办公室，由于今天是放假前最后一天，有些同事请假回去了，此时办公室没有几个人，走到茶水间吃了顺路买的鸡蛋和热豆浆，然后开始烧水泡茶回到工位上。”叮咚”然后看了一眼手机，手机推送的一则消息，武汉的新型病毒感染有扩大趋势，大家返程需要做好防护措施。”我去，怎么突然变这么厉害”我抬头看了一眼边走到工位边吐槽的一位同事，然后和他闲聊了两句关于武汉疫情的消息。然后女朋友发了消息说赶紧买口罩，现在貌似买不到了，突然气氛就变的紧张起来了，然后群里公司老大发了消息今天坚守在工作岗位的同事，晚上她请大家吃火锅。</p><p>&ensp;&ensp;&ensp;&ensp;回到现在，刚才走到客厅倒了杯水顺便看了一眼新闻，全国新型冠状病毒确诊人数已达7742人，然后走到厨房看到老妈在准备包饺子，听她说现在准备点饺子，后面就少出点门买东西了。</p><p>&ensp;&ensp;&ensp;&ensp;。。。<br>&ensp;&ensp;&ensp;&ensp;看了眼时间，还有3个多小时就下班了，大家都在准备工作的收尾工作，我和我们组的两位同事在讨论坐高铁回家的事情，然后一位同事说看现在这个情况坐高铁还是有点担心，于是他就直接取消了回家的高铁票，我们在讨论要不要这么担心，反正现在还没有波及到这边，同事说这两天刚刚发烧才好，身体抵抗力还是弱，准备找车子回去，不去人流密集地方。群里在统计晚上一起吃火锅的人数，但是看反应，貌似大家积极性也很低，整个办公室弥漫着紧张的氛围。</p><h2 id="Chapter-2"><a href="#Chapter-2" class="headerlink" title="Chapter 2"></a>Chapter 2</h2><p>&ensp;&ensp;&ensp;&ensp;今天已经是在家没出门的第六天的日子了。</p><p>&ensp;&ensp;&ensp;&ensp;时间回到放假那天，早上我和我女朋友一起打车去高铁站，可以看到百分之60的人都戴了口罩，当然我们也戴了女朋友给我留了一袋，然后1个多小时后，当我回到老家县城的时候发现家里基本没有人戴口罩，连疫情宣传都没有。在我回来的第二天，武汉全面封城，随后全国各地启动突发公共卫生事件一级响应。年30上午我出门去买了对联，然后我女朋友发信息让我去看看还能不能买到口罩，然后我去药店发现买的人挺多，但是货源也是挺充足的，于是我买了比较难买的N95的和普通的医用口罩。</p><p>&ensp;&ensp;&ensp;&ensp;一月二十七日，国家发布通知延长春节假期至二月二号，多了三天假期，看了新闻安徽这边发生了聚集性疫情，于是就宅在家里，哪里也不出去了，就在家新闻，截至今天，西藏也出现一例确诊病例，这下真的是全国各地都有病例了，目前确诊7742，疑似12167，死亡170。早上起来接到信息公司延长假期至二月十号，现在坐在电脑敲下这些天的经历，真是唏嘘不已。</p><p>&ensp;&ensp;&ensp;&ensp;希望武汉这次能挺住，希望国家挺住，全国一起加油克服疫情！</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;2020年1月30日闲聊&quot;&gt;&lt;a href=&quot;#2020年1月30日闲聊&quot; class=&quot;headerlink&quot; title=&quot;202
      
    
    </summary>
    
    
      <category term="日记" scheme="http://www.ljchengx.cn/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="闲聊" scheme="http://www.ljchengx.cn/tags/%E9%97%B2%E8%81%8A/"/>
    
  </entry>
  
  <entry>
    <title>C#异步Task</title>
    <link href="http://www.ljchengx.cn/2020/01/21/C-%E5%BC%82%E6%AD%A5Task/"/>
    <id>http://www.ljchengx.cn/2020/01/21/C-%E5%BC%82%E6%AD%A5Task/</id>
    <published>2020-01-21T06:22:46.000Z</published>
    <updated>2020-01-21T06:37:42.323Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><h2 id="目前项目中使用最多的两种异步Task"><a href="#目前项目中使用最多的两种异步Task" class="headerlink" title="目前项目中使用最多的两种异步Task"></a>目前项目中使用最多的两种异步Task</h2><p>以下方式是在项目中 主要处理服务事件的多线程异步方案<br>主要完成的单个服务 变成异步多线程 提升效率的写法 可以给需要的朋友提供一下思路</p><p>第一种是一个轮询服务，主要涉及一些定时的任务、轮询处理的问题，可以自己定义阀门和时间点</p><h3 id="关于轮询异步Task"><a href="#关于轮询异步Task" class="headerlink" title="关于轮询异步Task"></a>关于轮询异步Task</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApplication5</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> _go = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> currentTeacherCount = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> maxTask = <span class="number">15</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">object</span> obj = <span class="keyword">new</span> <span class="keyword">object</span>();</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> _go_LogStastic = <span class="literal">true</span>; <span class="comment">//阀门</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//轮询的多线程</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">while</span> (_go)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (_go_LogStastic)</span><br><span class="line">                &#123;</span><br><span class="line">                    _go_LogStastic = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">var</span> task = <span class="keyword">new</span> Task(<span class="keyword">delegate</span>()</span><br><span class="line">                    &#123;</span><br><span class="line">                        Log(<span class="string">"1"</span>);</span><br><span class="line"></span><br><span class="line">                    &#125;);</span><br><span class="line">                    task.Start();</span><br><span class="line">                    task.ContinueWith(q =&gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        _go_LogStastic = <span class="literal">true</span>;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;      </span><br><span class="line">            Console.WriteLine(<span class="string">"所有线程结束！"</span>);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Log</span>(<span class="params">String str</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"开始处理第"</span> + str + <span class="string">"个"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二种是循环的情景，主要有单一处理方案但是总数据过多，需要嵌套循环处理的方式。</p><p>可以根据当前环境设定最大线程数来控制，并且支持原子计数，方便日志打印进行跟踪。</p><h3 id="关于循环异步Task"><a href="#关于循环异步Task" class="headerlink" title="关于循环异步Task"></a>关于循环异步Task</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApplication5</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> _go = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> currentTeacherCount = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> maxTask = <span class="number">15</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">object</span> obj = <span class="keyword">new</span> <span class="keyword">object</span>();</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            List&lt;Task&gt; tasks = <span class="keyword">new</span> List&lt;Task&gt;();</span><br><span class="line">            List&lt;String&gt; list = <span class="keyword">new</span> List&lt;<span class="keyword">string</span>&gt;();</span><br><span class="line">            list.Add(<span class="string">"1"</span>);</span><br><span class="line">            list.Add(<span class="string">"2"</span>);</span><br><span class="line">            list.Add(<span class="string">"3"</span>);</span><br><span class="line">            list.Add(<span class="string">"4"</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> list)</span><br><span class="line">            &#123;</span><br><span class="line">                tasks.Add(Task.Factory.StartNew(() =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    Log(item);</span><br><span class="line">                &#125;).ContinueWith(t =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">lock</span> (obj)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Interlocked.Increment(<span class="keyword">ref</span> currentTeacherCount);</span><br><span class="line">                        Console.WriteLine(<span class="string">"第"</span> + currentTeacherCount + <span class="string">"数据同步完成,共"</span> + list.Count() + <span class="string">"数据需要处理"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;));</span><br><span class="line">                <span class="keyword">if</span> (tasks.Count &gt;= maxTask)</span><br><span class="line">                &#123;</span><br><span class="line">                    Task.WaitAny(tasks.ToArray());</span><br><span class="line">                    tasks = tasks.Where(t =&gt; t.Status == TaskStatus.Running).ToList();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Task.WaitAll(tasks.ToArray());</span><br><span class="line">            Console.WriteLine(<span class="string">"所有线程结束！"</span>);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Log</span>(<span class="params">String str</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"开始处理第"</span> + str + <span class="string">"个"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;h2 id=&quot;目前项目中使用最多的两种异步Task&quot;&gt;&lt;a href=&quot;#目前项目中使用最多的两种异步Task&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="C#" scheme="http://www.ljchengx.cn/categories/C/"/>
    
    
      <category term="异步" scheme="http://www.ljchengx.cn/tags/%E5%BC%82%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>单例模式</title>
    <link href="http://www.ljchengx.cn/2020/01/21/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>http://www.ljchengx.cn/2020/01/21/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</id>
    <published>2020-01-21T06:11:53.000Z</published>
    <updated>2020-01-21T06:20:07.968Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><ol><li><p>什么是设计模式？</p></li><li><p>设计模式的六大原则是什么？</p></li><li><p>设计模式的分类？</p></li><li><p>什么是单例模式？</p></li><li><p>单例模式常见的7种实现方式及优缺点</p></li><li><p>懒汉式</p></li><li><p>懒汉式（线程安全）</p></li><li><p>双重检测机制</p></li><li><p>饿汉式</p></li><li><p>静态块实现</p></li><li><p>静态内部类实现</p></li><li><p>枚举</p></li><li><p>序列化对单例模式的影响</p></li><li><p>单例模式引起内存泄漏的解决方案</p></li></ol><p>什么是设计模式？</p><p>那现在正式开始今天的分享，设计模式这个词大家应该都不陌生啊，在写代码的时候很多人都会运用到设计模式。那什么是设计模式呢。设计模式（Design pattern）是一套被反复使用、多数人知晓的、是代码设计经验的总结。使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性。 毫无疑问，设计模式于己于他人于系统都是多赢的；设计模式的目标之一就是提高程序的可复用性。考虑的是怎样才能将程序作为“组件”复用。</p><p>设计模式的六大原则是什么？</p><ul><li>开闭原则（Open Close Principle）：对扩展开放，对修改关闭</li><li>里氏替换原则（Liskov Substitution Principle）：子类可以扩展父类的功能，但不能改变父类原有的功能</li><li>依赖倒转原则（Dependence Inversion Principle）：高层模块不应该依赖低层模块，二者都应该依赖其抽象；抽象不应该依赖细节；细节应该依赖抽象，核心思想是面向接口编程</li><li>接口隔离原则（Interface Segregation Principle）：客户端不应该依赖它不需要的接口；一个类对另一个类的依赖应该建立在最小的接口上。</li><li>迪米特法则（最少知道原则）（Demeter Principle）：一个对象应该对其他对象保持最少的了解</li><li>单一职责原则（ Single responsibility principle ）：不要存在多于一个导致类变更的原因。通俗的说，即一个类只负责一项职责。</li></ul><p>设计模式的分类</p><p>GOF设计模式分类：23种</p><p>创建型设计模式：</p><p>对类的实例化过程进行了抽象，能够将软件模块中对象的创建和对象的使用分离。</p><ul><li>工厂方法模式（Factory Method）</li><li>抽象工厂模式（Abstract Factory）</li><li>创建者模式（Builder）</li><li>原型模式（Prototype）</li><li>单例模式（Singleton）</li></ul><p>结构型模式：</p><p>描述如何将类或者对 象结合在一起形成更大的结构，就像搭积木，可以通过 简单积木的组合形成复杂的、功能更为强大的结构。</p><ul><li>外观模式/门面模式（Facade门面模式）</li><li>适配器模式（Adapter）</li><li>代理模式（Proxy）</li><li>装饰模式（Decorator）</li><li>桥梁模式/桥接模式（Bridge）</li><li>组合模式（Composite）</li><li>享元模式（Flyweight）</li></ul><p>行为型设计模式：</p><p>是对在不同的对象之间划分责任和算法的抽象化。</p><p>行为型模式不仅仅关注类和对象的结构，而且重点关注它们之间的相互作用</p><ul><li>模板方法模式（Template Method）</li><li>观察者模式（Observer）</li><li>状态模式（State）</li><li>策略模式（Strategy）</li><li>职责链模式（Chain of Responsibility）</li><li>命令模式（Command）</li><li>访问者模式（Visitor）</li><li>调停者模式（Mediator）</li><li>备忘录模式（Memento）</li><li>迭代器模式（Iterator）</li><li>解释器模式（Interpreter）</li></ul><p>什么是单例模式？</p><p>程序在运行的时候，通常都会生成多个实例，例如表示字符串的java.lang.String类的实例与字符串是一对一的关系，所以当有一千个字符串的时候，就会生成1000个实例，</p><p>许多时候整个系统只需要拥有一个的全局对象，这样有利于我们协调系统整体的行为。比如在某个服务器程序中，该服务器的配置信息存放在一个文件中，这些配置数据由一个单例对象统一读取，然后服务进程中的其他对象再通过这个单例对象获取这些配置信息。这种方式简化了在复杂环境下的配置管理。(维基百科)。</p><p>总结为确保任何情况下都绝对只有一个实例。或者想在程序上表现出“只存在一个实例”这就是单例模式。</p><p>单例模式常见的7种实现方式及优缺点</p><p><strong>懒汉式线程不安全</strong></p><p>在单例模式中，有一种称为懒汉式的单例模式。顾名思义，懒汉式可以理解使用时才进行初始化，它包括私有的构造方法，私有的全局静态变量，公有的静态方法，是一种懒加载机制。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">    懒汉式线程不安全</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">​    System.out.println(<span class="string">"初始化"</span>);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">​      instance = <span class="keyword">new</span> Singleton();</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">return</span> instance;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面是最常见的懒汉式单例模式的写法，但是如果在多线程的情况下，上述方法就会出现问题，它达不到只有一个单例对象的效果，例如当某个线程1调getInstance（）方法并判断instance == null，此时（就在判断为空后new Singleton()之前）另一个线程2也调用getInstance（）方法，由于此时线程1还没有new出对象，则线程2执行getInstance（）中instance 也为空，那么此时就会出现多个实例的情况，而达不到只有一个实例的目的</p><p><strong>懒汉式（线程安全）</strong></p><p>在上述实现中我们提到的懒汉式单例模式是一种非线程安全的，非线程安全即多线程访问时会生成多个实例。那么怎么样实现线程安全呢，也许你应该已经想到使用同步关键字synchronized</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> \*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> *2懒汉式线程安全：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">​    System.out.println(<span class="string">"初始化"</span>);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">​      instance = <span class="keyword">new</span> Singleton();</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">return</span> instance;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用同步关键字后，也就实现了线程安全访问，因为在任何时候它只能有一个线程调用 getInstance() 方法。那么你可能会发出疑问，这样加入同步，在高并发情况下，效率是很低的，因为真正需要同步的是我们第一次初始化的时候，是的，所以我们要进行进一步的优化。</p><p>双重检测顾名思义就是两次检测，一次是检测instance 实例是否为空，进行第一次过滤，在同步快中进行第二次检测，因为当多个线程执行第一次检测通过后会同时进入同步快，那么此时就有必要进行第二次检测来避免生成多个实例。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> \* </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> *3DCL</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DCLSingleton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> DCLSingleton instance;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">DCLSingleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">​    System.out.println(<span class="string">"初始化"</span>);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span>  DCLSingleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">if</span>(instance==<span class="keyword">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">​      <span class="keyword">synchronized</span> (DCLSingleton<span class="class">.<span class="keyword">class</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">​          instance = <span class="keyword">new</span> DCLSingleton();</span><br><span class="line"></span><br><span class="line">​        &#125;</span><br><span class="line"></span><br><span class="line">​      &#125;</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">return</span> instance;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于上面的代码时近乎完美的，既然说近乎完美，那肯定还是有瑕疵的，瑕疵出现的原因就是instance = new Singleton();这一句代码，你可能会问，这会有什么问题，其实我也不知道，哈哈。</p><p>在计算机语言中，初始化包含了三个步骤</p><ol><li>分配内存</li><li>执行构造方法初始化</li><li>将对象指向分配的内存空间</li></ol><p>由于java编译器为了尽可能减少内存操作速度远慢于CPU运行速度所带来的CPU空置的影响，虚拟机会按照自己的一些规则(这规则后面再叙述)将程序编写顺序打乱——即写在后面的代码在时间顺序上可能会先执行，而写在前面的代码会后执行——以尽可能充分地利用CPU就会出现指令重排序(happen-before)，从而导致上面的三个步骤执行顺序发生改变。正常情况下是123，但是如果指令重排后执行为1,3,2那么久会导致instance 为空，进而导致程序出现问题。</p><p>既然已经知道了上述双重检测机制会出现问题，那么我们该怎么避免出现，该如何解决呢?</p><p>在java语言中有一个关键字volatile，我们都知道它提供了内存可见性这一特性，其实它还有一个作用就是防止指令重排序，那么我们把变量singleton用volatile修饰下就可以了。</p><p><strong>饿汉式</strong></p><p>饿汉式与懒汉式区别是它在类加载的时候就进行初始化操作，而懒汉式是调用getInstance()方法时才进行初始化，有延迟加载的作用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> \* Created by Code4Android</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> *4饿汉式</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HungrySingleton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span>  HungrySingleton instance = <span class="keyword">new</span> HungrySingleton();</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">HungrySingleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">​    System.out.println(<span class="string">"初始化"</span>);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HungrySingleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">return</span> instance;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与懒汉式相比，它是线程安全的（无需用同步关键字修饰），由于没有加锁，执行效率也相对较高，但是也有一些缺点，在类加载时就初始化，会浪费内存。</p><p><strong>静态块实现方式</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> \* </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> *5静态块</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HungrySingleton</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span>  HungrySingleton instance = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//饿汉式变种5</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line"></span><br><span class="line">​    instance = <span class="keyword">new</span> HungrySingleton();</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">HungrySingleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">​    System.out.println(<span class="string">"初始化"</span>);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HungrySingleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">return</span> instance;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>静态内部类实现方式</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> \* </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> *6静态内部类</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticInnerClassSingleton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonHolder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> StaticInnerClassSingleton INSTANCE = <span class="keyword">new</span> StaticInnerClassSingleton();</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">StaticInnerClassSingleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">​    System.out.println(<span class="string">"初始化"</span>);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> StaticInnerClassSingleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">return</span> SingletonHolder.INSTANCE;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>静态内部类相对实现较为简单，并且它是一种懒加载机制， 当Singleton 类被装载了，instance 不一定被初始化。因为 SingletonHolder 类没有被主动使用，只有显示通过调用 getInstance 方法时，才会显示装载 SingletonHolder 类，从而实例化 instance。</p><p><strong>枚举</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> \* </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> \* 7默认枚举实例的创建是线程安全的</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> EnumSinglton &#123;</span><br><span class="line"></span><br><span class="line">  INSTANCE;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">EnumSinglton</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">​    System.out.println(<span class="string">"构造方法"</span>);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span>  <span class="title">doSomething</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">​    System.out.println(<span class="string">"调用单例方法"</span>);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;什么是设计模式？&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;设计模式的六大原则是什么？&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;设计模式的分类？&lt;/p
      
    
    </summary>
    
    
      <category term="JAVA" scheme="http://www.ljchengx.cn/categories/JAVA/"/>
    
      <category term="Android" scheme="http://www.ljchengx.cn/categories/JAVA/Android/"/>
    
    
      <category term="单例" scheme="http://www.ljchengx.cn/tags/%E5%8D%95%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>项目干系人管理</title>
    <link href="http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E5%B9%B2%E7%B3%BB%E4%BA%BA%E7%AE%A1%E7%90%86/"/>
    <id>http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E5%B9%B2%E7%B3%BB%E4%BA%BA%E7%AE%A1%E7%90%86/</id>
    <published>2020-01-21T06:02:29.000Z</published>
    <updated>2020-03-06T05:58:42.926Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><p>1.影响项目的人</p><p>2.受项目影响的人</p><p><img src="https://s2.ax1x.com/2020/03/06/3qZSUg.jpg" alt="3qZSUg.jpg"></p><p><strong>识别干系人：</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.项目章程 2.采购文件 3.事业 4.组织</td><td>1.干系人分析 2.专家判断 3.会议</td><td>1.干系人登记册</td></tr></tbody></table><p><img src="https://s2.ax1x.com/2020/03/06/3qZp5Q.jpg" alt="3qZp5Q.jpg"></p><p><strong>干系人登记册：</strong></p><p>1.基本信息 姓名 职位 联系方式等</p><p>2.评估信息 主要需求 主要期望 潜在影响</p><p>3.干系人分类 关键干系人/非关键干系人</p><p><strong>规划干系人管理：</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.项目管理文件 2.干系人登记册 3.事业 4.组织</td><td>1.专家判断 2.会议 3.分析技术</td><td>1.干系人管理计划 2.项目文件更新</td></tr></tbody></table><p><strong>分析技术：</strong></p><p><img src="https://s2.ax1x.com/2020/03/06/3qVzVS.jpg" alt="3qVzVS.jpg"></p><p><strong>管理干系人参与：</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.关系人管理计划 2.沟通管理计划 3.组织 4.事业</td><td>1.沟通方法 2.人际关系技能 3.管理技能</td><td>1.问题日志 2.变更请求 3.项目管理计划更新 4.项目文件更新 5.组织过程资产更新</td></tr></tbody></table><p><strong>管理干系人参与活动：</strong></p><p>帮助项目经理提升来自干系人的支持 并把干系人的抵制降到最低 从未显著提升项目成功的机会</p><p><strong>控制干系人管理：</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.项目管理计划 2.问题日志 3.工作绩效数据 4.项目文件</td><td>1.信息管理系统 2.专家判断 3.会议</td><td>1.工作绩效信息 2.变更请求 3.项目管理计划更新 4.项目文件更新 5.组织过程资产更新</td></tr></tbody></table><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;1.影响项目的人&lt;/p&gt;&lt;p&gt;2.受项目影响的人&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/03/06/
      
    
    </summary>
    
    
      <category term="信息系统项目管理" scheme="http://www.ljchengx.cn/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="干系人" scheme="http://www.ljchengx.cn/tags/%E5%B9%B2%E7%B3%BB%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>项目合同管理</title>
    <link href="http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E5%90%88%E5%90%8C%E7%AE%A1%E7%90%86/"/>
    <id>http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E5%90%88%E5%90%8C%E7%AE%A1%E7%90%86/</id>
    <published>2020-01-21T06:00:07.000Z</published>
    <updated>2020-03-06T05:54:30.200Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><p>合同的类型(范围)：</p><p>总承包合同 ：全过程作为一个整体发包给同一个卖方()</p><p>单项工程承包合同：只承包项目中的某一项或几项内容</p><p>分包合同：总承包人将某一部分分包出去 (买方认可 非主体工作 分包部分不是整体 具有相应资质 分包之后不可再分包)</p><p>合同的类型(付款方式)：</p><p>1.总价合同</p><p>2.成本补偿合同</p><p>3.工料合同</p><p>合同的内容：</p><p><img src="https://s2.ax1x.com/2020/03/06/3qVZhd.jpg" alt="3qVZhd.jpg"></p><p>合同签订管理：</p><p><img src="https://s2.ax1x.com/2020/03/06/3qVn1I.jpg" alt="3qVn1I.jpg"></p><p>合同履行管理：</p><p><img src="https://s2.ax1x.com/2020/03/06/3qVm9A.jpg" alt="3qVm9A.jpg"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;合同的类型(范围)：&lt;/p&gt;&lt;p&gt;总承包合同 ：全过程作为一个整体发包给同一个卖方()&lt;/p&gt;&lt;p&gt;单项工程承包合同：只承包项目中的某一项或几项
      
    
    </summary>
    
    
      <category term="信息系统项目管理" scheme="http://www.ljchengx.cn/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="合同" scheme="http://www.ljchengx.cn/tags/%E5%90%88%E5%90%8C/"/>
    
  </entry>
  
  <entry>
    <title>项目人力资源管理(二)</title>
    <link href="http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E4%BA%BA%E5%8A%9B%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86-%E4%BA%8C/"/>
    <id>http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E4%BA%BA%E5%8A%9B%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86-%E4%BA%8C/</id>
    <published>2020-01-21T02:32:04.000Z</published>
    <updated>2020-03-06T05:52:24.753Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><p><strong>组建项目团队</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.人力资源管理计划 2.事业环境因素 3.组织过程资产</td><td>1.预分派 2.谈判 3.招募 4.虚拟团队 5.多标准决策分析</td><td>1.项目人员分派 2.资源日历 3.项目管理计划更新</td></tr></tbody></table><p><strong>建设项目团队</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.人力资源管理计划 2.项目人员分派 3.资源日历</td><td>1.人际关系技能 2.培训 3.团队建设活动 4.基本规则 5.集中办公 6.认可和奖励 7.人事评测工具</td><td>1.团队绩效评价 2.事业环境因素更新</td></tr></tbody></table><p><img src="https://s2.ax1x.com/2020/03/06/3qEqmT.jpg" alt="3qEqmT.jpg"></p><p><img src="https://s2.ax1x.com/2020/03/06/3qE5fs.jpg" alt="3qE5fs.jpg"></p><p><strong>人事评定工具</strong></p><p><img src="https://s2.ax1x.com/2020/03/06/3qE760.jpg" alt="3qE760.jpg"></p><p><strong>管理项目团队</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.人力资源管理计划 2.项目人员分配 3.团队绩效评价 4.问题日志 5.工作绩效评价 6.组织过程资产</td><td>1.观察与交谈 2.项目绩效评价 3.冲突管理 4.人际关系能力</td><td>1.变更请求 2.项目管理计划 3.项目文件更新 4.事业环境因素更新 5.组织过程资产</td></tr></tbody></table><p><strong>冲突管理</strong></p><p><img src="https://s2.ax1x.com/2020/03/06/3qETlq.jpg" alt="3qETlq.jpg"></p><p><strong>冲突的解决</strong></p><p><img src="https://s2.ax1x.com/2020/03/06/3qEopn.jpg" alt="3qEopn.jpg"></p><p><img src="https://s2.ax1x.com/2020/03/06/3qE4Yj.jpg" alt="3qE4Yj.jpg"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;组建项目团队&lt;/strong&gt;&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;输入&lt;/th&gt;&lt;th&gt;工具与技术&lt;/th&gt;&lt;t
      
    
    </summary>
    
    
      <category term="信息系统项目管理" scheme="http://www.ljchengx.cn/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="人力资源" scheme="http://www.ljchengx.cn/tags/%E4%BA%BA%E5%8A%9B%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>项目人力资源管理(一)</title>
    <link href="http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E4%BA%BA%E5%8A%9B%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86-%E4%B8%80/"/>
    <id>http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E4%BA%BA%E5%8A%9B%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86-%E4%B8%80/</id>
    <published>2020-01-21T02:28:28.000Z</published>
    <updated>2020-03-06T05:49:03.336Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><p><strong>1.领导和管理</strong></p><p>领导者：确定方向 统一思想 激励和鼓舞</p><p>管理者：被组织赋予职位和权力 负责某件事情的管理或实现某个目标</p><p>领导者设定目标 管理者率众实现目标</p><p>项目经理有领导者和管理者的双重身份</p><p><strong>2.权力：</strong></p><p>职位权力 管理者在组织中的职位和职权</p><p>惩罚权力 使用降职 扣薪等</p><p>奖励权力 升职 加薪</p><p>专家权力 来源个人的专业技能 某些领域的专业权威</p><p>参照权力 源于他人对你的认可和敬佩 愿意服从和模仿</p><p><strong>马斯洛需求层次理论</strong></p><p><img src="https://s2.ax1x.com/2020/03/06/3qA6ZF.jpg" alt="3qA6ZF.jpg"></p><p><strong>赫兹伯格的双因素理论</strong></p><p><img src="https://s2.ax1x.com/2020/03/06/3qAgIJ.jpg" alt="3qAgIJ.jpg"></p><p><strong>麦格雷戈的X Y理论</strong></p><p><img src="https://s2.ax1x.com/2020/03/06/3qAWGR.jpg" alt="3qAWGR.jpg"></p><p><strong>期望理论：</strong></p><p><strong>激发力量 = 目标效价*期望值</strong></p><p><strong>人力资源管理内容</strong></p><p><img src="https://s2.ax1x.com/2020/03/06/3qARi9.jpg" alt="3qARi9.jpg"></p><p><strong>规划人力资源管理</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.项目管理计划 2.活动资源需求 3.事业 4.组织</td><td>1.组织图和职位描述 2.人际交往 3.组织理论 4.专家判断 5.会议</td><td>1.人力资源管理计划</td></tr></tbody></table><p>人际交往：积极沟通 午餐会 非正式交谈和行业会议</p><p>组织理论：阐述人员 团队和组织管理</p><p>人力资源管理计划</p><p><img src="https://s2.ax1x.com/2020/03/06/3qAca4.jpg" alt="3qAca4.jpg"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;1.领导和管理&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;领导者：确定方向 统一思想 激励和鼓舞&lt;/p&gt;&lt;p&gt;管理者：被组织赋予职位和权力 
      
    
    </summary>
    
    
      <category term="信息系统项目管理" scheme="http://www.ljchengx.cn/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="人力资源" scheme="http://www.ljchengx.cn/tags/%E4%BA%BA%E5%8A%9B%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>项目采购管理</title>
    <link href="http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E9%87%87%E8%B4%AD%E7%AE%A1%E7%90%86/"/>
    <id>http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E9%87%87%E8%B4%AD%E7%AE%A1%E7%90%86/</id>
    <published>2020-01-21T02:25:56.000Z</published>
    <updated>2020-03-06T07:08:02.211Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><p>1.规划采购</p><p>2.实施采购</p><p>3.控制采购</p><p>4.结束采购</p><p><strong>规划采购管理：</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.项目管理计划 2.需求文档 3.风险登记册 4.活动资源需求 5.项目进度 6.活动成本估算 7.干系人登记册 8.事业 9.组织</td><td>1.自制采购外购分析 2.专家 3.市场调研 4.会议</td><td>1.采购管理计划 2.采购工作说明书 3.采购文件 4.供方选择标准 5.自制外购决策 6.变更申请 7.项目文件更新</td></tr></tbody></table><p><img src="https://s2.ax1x.com/2020/03/06/3qUkbF.jpg" alt="3qUkbF.jpg"></p><p><strong>实施采购：</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.采购管理计划 2.采购文件 3.供方选择标准 4.卖方建议书 5.项目文件 6.自制外购决策 7.采购工作说明书 8.组织过程资产</td><td>1.投标人会议 2.建议书评价技术 3.独立估算 4.专家判断 5.刊登广告 6.分析技术 7.采购谈判</td><td>1.选择的卖方 2.协议 3.资源日历 4.变更请求 5.项目管理计划更新 6.项目文件更新</td></tr></tbody></table><p><strong>控制采购：</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.项目管理计划 2.采购文件 3.合同 4.批准的变更请求 5.工作绩效报告 6.工作绩效数据</td><td>1.合同变更控制系统 2.采购绩效审查 3.检查与审计 4.报告绩效 5.支付系统 6.索赔管理 7.记录管理系统</td><td>1.工作绩效信息 2.变更请求 3.项目管理计划更新 4.项目文件更新 5.组织更新</td></tr></tbody></table><p><strong>结束采购：</strong></p><p><img src="https://s2.ax1x.com/2020/03/06/3qUoa4.png" alt="3qUoa4.png"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;1.规划采购&lt;/p&gt;&lt;p&gt;2.实施采购&lt;/p&gt;&lt;p&gt;3.控制采购&lt;/p&gt;&lt;p&gt;4.结束采购&lt;/p&gt;&lt;p&gt;&lt;strong&gt;规划采购管理：&lt;/str
      
    
    </summary>
    
    
      <category term="信息系统项目管理" scheme="http://www.ljchengx.cn/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="采购" scheme="http://www.ljchengx.cn/tags/%E9%87%87%E8%B4%AD/"/>
    
  </entry>
  
  <entry>
    <title>项目沟通管理</title>
    <link href="http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E6%B2%9F%E9%80%9A%E7%AE%A1%E7%90%86/"/>
    <id>http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E6%B2%9F%E9%80%9A%E7%AE%A1%E7%90%86/</id>
    <published>2020-01-21T02:23:55.000Z</published>
    <updated>2020-03-06T05:55:39.133Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><p><strong>规划沟通管理</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.项目管理计划 2.干系人登记册 3.事业 4.组织</td><td>1.沟通需求分析 2.沟通技术 3.沟通模型 4.沟通方法 5.会议</td><td>1.沟通管理计划 2.项目文件更新</td></tr></tbody></table><p><strong>沟通需求分析：</strong></p><p>对组织结构图 责任关系 涉及学科专业 项目人数地点 内外部信息需要</p><p>以及对干系人的信息和沟通需求进行分析</p><p>以确定干系人的信息需求，包括信息的类型和格式 以及信息对干系人的价值</p><p>沟通渠道：N(N-1)/2</p><p><strong>沟通技术：</strong></p><p>简答交流到冗长的会议</p><p>影响包括：信息需求的紧迫性 可用性 易用性等</p><p><strong>沟通模型：</strong></p><p><img src="https://s2.ax1x.com/2020/03/06/3qV2g1.jpg" alt="3qV2g1.jpg"></p><p><strong>沟通方法：</strong></p><p>交互式</p><p>推式</p><p>拉式</p><p><strong>管理沟通：</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.沟通管理计划 2.工作绩效报告 3.事业 4.组织</td><td>1.沟通技术 2.沟通模型 3.沟通方法 4.信息管理系统 5.报告绩效</td><td>1.项目沟通 2.项目管理计划 3.项目文件更新 4.组织过程资产更新</td></tr></tbody></table><p><strong>报告绩效：</strong></p><p>收集和发布信息 分析现状 进展以及预测结果的汇报绩效的工作</p><p><strong>控制沟通：</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.沟通管理计划 2.项目沟通 3.问题日志 4.工作绩效数据 5.组织过程资产</td><td>1.信息管理系统 2.专家判断 3.会议</td><td>1.工作绩效信息 2.变更请求 3.项目管理计划更新 4.项目文件更新 5.组织过程资产更新</td></tr></tbody></table><p>补充：</p><p><img src="https://s2.ax1x.com/2020/03/06/3qVg3R.jpg" alt="3qVg3R.jpg"></p><p><img src="https://s2.ax1x.com/2020/03/06/3qVRjx.jpg" alt="3qVRjx.jpg"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;规划沟通管理&lt;/strong&gt;&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;输入&lt;/th&gt;&lt;th&gt;工具与技术&lt;/th&gt;&lt;t
      
    
    </summary>
    
    
      <category term="信息系统项目管理" scheme="http://www.ljchengx.cn/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="沟通" scheme="http://www.ljchengx.cn/tags/%E6%B2%9F%E9%80%9A/"/>
    
  </entry>
  
  <entry>
    <title>项目风险管理(二)</title>
    <link href="http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E9%A3%8E%E9%99%A9%E7%AE%A1%E7%90%86-%E4%BA%8C/"/>
    <id>http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E9%A3%8E%E9%99%A9%E7%AE%A1%E7%90%86-%E4%BA%8C/</id>
    <published>2020-01-21T02:20:26.000Z</published>
    <updated>2020-03-06T06:01:37.291Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><p><strong>定量风险分析：</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.风险管理计划 2.成本管理计划 3.进度管理计划 4.风险登记册 5.事业 6.组织</td><td>1.数据收集和展示技术 2.定量风险分析和建模技术 3.专家判断</td><td>1.项目文件更新 2.风险登记册更新包括： 项目的概率分布 实现成本和时间目标的概率 量化的风险优先级清单 定量风险分析的结果</td></tr></tbody></table><p><img src="https://s2.ax1x.com/2020/03/06/3qZcdS.png" alt="3qZcdS.png"></p><p><strong>规划风险应对：</strong></p><table><thead><tr><th>1.风险管理计划 2.风险登记册</th><th>1.消极风险或威胁的应对策略 2.积极风险或机会的应对策略 3.应急应对策略 4.专家判断</th><th>1.项目管理计划 2.项目文件更新</th></tr></thead><tbody><tr><td></td><td></td><td></td></tr></tbody></table><p><strong>1.消极风险或者威胁的应对策略</strong></p><p>避免：采取行动，消除风险 如改变计划 改变策略 放宽项目目标</p><p>转移：转移给第三方 如保险 分包</p><p>减轻：采取行动 降低风险概率或降低影响</p><p>接受：被动 主动</p><p><strong>2.积极风险或机会的应对策略</strong></p><p>开拓：积极进取 确保机会实现 采取全新技术 分配更多有能力的资源</p><p>提高：提高机会发生的概率 如增加资源培训</p><p>分享：同第三方一起分享积极风险 互惠互利</p><p>接受 机会发生时乐于利用 但不主动追求机会</p><p><strong>3.应急应对策略</strong></p><p><img src="https://s2.ax1x.com/2020/03/06/3qZDMt.png" alt="3qZDMt.png"></p><p><strong>项目文件更新内容:</strong></p><p><strong>风险的责任人及分派给他们的职责</strong></p><p><strong>商定的应对措施</strong></p><p><strong>实施选定的应对策略所需的具体行动</strong></p><p><strong>风险发生的触发条件征兆和警示</strong></p><p><strong>实施选定的应对策略所需的预算和进度活动</strong></p><p><strong>应急计划以及应急计划实施的触动因素</strong></p><p><strong>对策实施之后预计仍将残留的风险</strong></p><p><strong>实施风险应对措施直接造成的二次风险</strong></p><p><strong>控制风险：</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.项目管理计划 2.风险登记册 3.工作绩效数据 4.工作绩效报告</td><td>1.风险再评估 2.风险审计 3.偏差和趋势分析 4.技术绩效测量 5.储备分析 6.会议</td><td>1.工作绩效信息 2.变更请求 3.项目管理计划更新 4.项目文件更新 5.组织过程资产更新</td></tr></tbody></table><p><strong>1.风险再评估 识别新风险 现风险的再评估 删除过时风险</strong></p><p><strong>2.风险审计 定期的风险评审</strong></p><p><strong>3.偏差和趋势分析 分析偏差 预估趋势 揭示进度</strong></p><p><strong>4.技术绩效测量 将取得技术成果与计划相比</strong></p><p><strong>5.储备分析 分析确定剩余应急储备与剩余的风险相匹配</strong></p><p>做题记录:</p><p>德尔菲技术技术和鱼骨图是对风险识别过程使用。</p><p>按照风险可能造成的后果，可以将风险划分为纯粹风险和投机风险。</p><p>权变措施是风险监控过程中，对未识别的风险进行临时权变处理。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;定量风险分析：&lt;/strong&gt;&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;输入&lt;/th&gt;&lt;th&gt;工具与技术&lt;/th&gt;&lt;
      
    
    </summary>
    
    
      <category term="信息系统项目管理" scheme="http://www.ljchengx.cn/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="风险" scheme="http://www.ljchengx.cn/tags/%E9%A3%8E%E9%99%A9/"/>
    
  </entry>
  
  <entry>
    <title>项目风险管理(一)</title>
    <link href="http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E9%A3%8E%E9%99%A9%E7%AE%A1%E7%90%86-%E4%B8%80/"/>
    <id>http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E9%A3%8E%E9%99%A9%E7%AE%A1%E7%90%86-%E4%B8%80/</id>
    <published>2020-01-21T02:17:22.000Z</published>
    <updated>2020-03-06T05:59:47.599Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><p><strong>风险的属性</strong></p><p>1.风险事件的随机性 偶然性</p><p>2.风向的相对性 相对项目活动主体而言 承受力不同 影响不同 收益大小 投入太小 主体的地位和资源</p><p>3.风险的可变性 条件变化 会引起风险的变化</p><p><strong>风险态度的影响因素：</strong></p><p>风险偏好</p><p>风险承受力</p><p>风险临界值</p><p><strong>风险分类：</strong></p><p>按性质</p><p>按产生原因</p><p>按是否可管理</p><p>按影响范围</p><p>按后果承担者</p><p>按可预测性</p><p><img src="https://s2.ax1x.com/2020/03/06/3qZn54.jpg" alt="3qZn54.jpg"></p><p><strong>规划风险管理：</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.项目管理计划 2.项目章程 3.干系人登记册 4.事业 5.组织</td><td>1.分析技术 2.专家判断 3.会议</td><td>1.风险管理计划</td></tr></tbody></table><p><strong>风险管理计划：</strong></p><p>方法论</p><p>角色和职责</p><p>预算</p><p>时间安排</p><p>风险类别：风险分解结构</p><p>风险概率和影响力的定义</p><p>风险概率和影响矩阵</p><p>修改的干系人承受度</p><p>报告格式</p><p>跟踪：如何记录和风险审计</p><p><strong>识别风险：</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.风险管理计划 2.成本管理计划 3.进度管理计划 4.质量管理计划 5.人力资源管理计划 6.范围基准 7.活动的成本估算 8.活动持续时间估算 9.干系人登记册 10.项目文件 11.采购文件 12.事业 13.组织</td><td>1.文档审查 2.信息收集技术 3.核对单分析 4.假设分析 5.图解技术 6.SWOT分析 7.专家判断</td><td>1.风险登记册</td></tr></tbody></table><p><strong>实施定性风险分析：</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.风险管理计划 2.范围基准 3.风险登记册 4.事业 5.组织</td><td>1.风险概率和影响评估 2.概率和影响矩阵 3.风险数据质量评估 4.风险分类 5.风险紧迫性评估 6.专家判断</td><td>1.项目文件更新</td></tr></tbody></table><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;风险的属性&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1.风险事件的随机性 偶然性&lt;/p&gt;&lt;p&gt;2.风向的相对性 相对项目活动主体而言 承受
      
    
    </summary>
    
    
      <category term="信息系统项目管理" scheme="http://www.ljchengx.cn/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="风险" scheme="http://www.ljchengx.cn/tags/%E9%A3%8E%E9%99%A9/"/>
    
  </entry>
  
  <entry>
    <title>项目进度管理(二)</title>
    <link href="http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E8%BF%9B%E5%BA%A6%E7%AE%A1%E7%90%86-%E4%BA%8C/"/>
    <id>http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E8%BF%9B%E5%BA%A6%E7%AE%A1%E7%90%86-%E4%BA%8C/</id>
    <published>2020-01-21T01:54:08.000Z</published>
    <updated>2020-01-21T01:54:39.273Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><p><strong>制定进度计划</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.进度管理计划 2.活动清单 3.活动属性 4.项目进度网络图 5.活动资源需求 6.资源日历 7.活动历时估算 8.项目范围说明书 9.风险登记册 10.项目人员分配 11.需求分解结构 12.事业 13.组织</td><td>1.进度网络分析 2.关键路径法 3.关键链法 4.资源优化技术 5.提前量和滞后量 6.进度压缩 7.进度计划编制工具 8.建模技术</td><td>1.进度基准 2.项目进度计划 3.进度数据 4.项目日历 5.项目管理计划更新 6.项目文件更新</td></tr></tbody></table><p><strong>关键路径法</strong></p><p>时间最长的路径</p><p>总浮动时间(总时间)：不延误项目完成日期 路径上活动可推迟的时间 注：关键路径上没有总时差</p><p>自由浮动时间(自由时差)：非关键路径上不影响任何紧后活动最早开始日期下 本活动可推迟的时间</p><p>注：唯一紧前活动没有自由时差 关键路径上的活动没有自由时差</p><p><strong>关键链法</strong></p><p>帕金森定律</p><p>学生综合症</p><p>解决：最早开始法则 越早越好 砍掉每个活动的浮动时间</p><p>资源平衡：可以提高资源使用率 但可能导致关键路径延长</p><p>资源平滑：利用活动的浮动时间 不会改变项目关键路径</p><p><strong>建模技术：</strong></p><p>蒙特卡洛</p><p><strong>进度压缩：</strong></p><p>加班</p><p>快速跟进</p><p><strong>进度基准：</strong></p><p>经批准的进度模型 1.项目进度计划 2.进度数据</p><p><strong>控制进度</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.项目管理计划 2.项目进度计划 3.工作绩效数据 4.项目日历 5.进度数据 6.组织过程资产</td><td>1.绩效审查 2.项目管理软件 3.资源优化技术 4.建模技术 5.提前量和滞后量 6.进度压缩 7.进度计划编制工具</td><td>1.工作绩效信息 2.进度预测 3.变更请求 4.项目管理计划 5.项目文件更新 6.组织过程资产更新</td></tr></tbody></table><p><strong>缩短工期的办法：</strong></p><p>1.赶工 投入更多的资源或增加工作时间 缩短关键路径上活动的工期</p><p>2.快速跟进 并行施工</p><p>3.使用高素质的资源或经验丰富的人才</p><p>4.减小活动范围或降低要求</p><p>5.改进方法和技术，提高生产效率</p><p>6.加强质量管理 及时发现问题</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;制定进度计划&lt;/strong&gt;&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;输入&lt;/th&gt;&lt;th&gt;工具与技术&lt;/th&gt;&lt;t
      
    
    </summary>
    
    
      <category term="信息系统项目管理" scheme="http://www.ljchengx.cn/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="进度" scheme="http://www.ljchengx.cn/tags/%E8%BF%9B%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>项目进度管理(一)</title>
    <link href="http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E8%BF%9B%E5%BA%A6%E7%AE%A1%E7%90%86-%E4%B8%80/"/>
    <id>http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E8%BF%9B%E5%BA%A6%E7%AE%A1%E7%90%86-%E4%B8%80/</id>
    <published>2020-01-21T01:53:14.000Z</published>
    <updated>2020-01-21T01:56:20.417Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><p><strong>项目进度管理</strong></p><p><strong>规划进度管理</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.项目管理计划 2.项目章程 3.事业 4.组织</td><td>1.专家判断 2.分析技术 3.会议</td><td>1.进度管理计划</td></tr></tbody></table><p><strong>定义活动</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.进度管理计划 2.范围基准 3.事业 4.组织</td><td>1.分解 2滚动式规划 3.专家判断</td><td>1.活动清单 2.活动属性 3.里程碑清单</td></tr></tbody></table><p><strong>活动清单:</strong></p><p>列出项目开展的全部活动 确保项目团队成员明确自己的工作和责任，知道如何完成工作。</p><p><strong>活动清单属性：</strong></p><p>包括活动表示 WBS标识 活动标签或名称</p><p><strong>里程碑清单：</strong></p><p><strong>主要可交付物 持续时间为0 不消耗成本</strong></p><p>例如：可研完成 可交付物为可行性研究报告</p><p><strong>排列活动顺序</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.进度管理计划 2.活动清单 3.活动属性 4.里程碑清单 5.项目范围说明 6.事业 7.组织</td><td>1.紧前关系 2.确定依赖关系 3.提前量和滞后量</td><td>1.项目进度网络 2.项目文件更新</td></tr></tbody></table><p>PDM四种逻辑关系：</p><p>FS 完成到开始</p><p>FF 完成到完成 (产品开发完成 控制质量也就完成了)</p><p>SS 开始到开始 (地基浇灌 路面平整)</p><p>SF 开始到完成 (新旧系统切换)</p><p>箭线图法：</p><p>双代号网络图 每一件事必须有一个唯一代号 不重复</p><p>任两项活动的紧前事件和紧后事件代号 至少有一个不同</p><p>确认依赖关系：</p><p>1.强制性依赖 硬逻辑关系</p><p>2.选择性依赖 首选逻辑关系 优先逻辑关系</p><p>提前量和滞后量：</p><p>A–提前-10分钟-&gt;B</p><p>A–滞后+28天-&gt;B</p><p><strong>估算活动资源</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.进度管理计划 2.活动清单 3.活动属性 4.资源日历 5.风险登记册 6.活动成本估算 7.事业 8.组织</td><td>1.专家判断 2.备选方案分析 3.发布的估算数据 4.自下而上的估算 5.项目管理软件</td><td>1.活动资源需求 2.资源分解结构 3.项目文件更新</td></tr></tbody></table><p><strong>估算活动持续时间</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.进度管理计划 2.活动清单 3.活动属性 4.活动资源需求 5.资源日历 6.项目范围说明书 7.风险登记册 8.资源分解结构 9.事业环境因素 10.组织</td><td>1.专家判断 2.类比估算 3.参数估算 4.三点估算 5.群体决策技术 6.储备分析</td><td>1.活动历时估算 2.项目文件更新</td></tr></tbody></table><p>三点估算</p><p>1.个标准差 68.26%</p><p>2.个标准差 95.43%</p><p>3.个标准差 99.73%</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;项目进度管理&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;规划进度管理&lt;/strong&gt;&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;
      
    
    </summary>
    
    
      <category term="信息系统项目管理" scheme="http://www.ljchengx.cn/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="进度" scheme="http://www.ljchengx.cn/tags/%E8%BF%9B%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>项目成本管理(二)</title>
    <link href="http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E6%88%90%E6%9C%AC%E7%AE%A1%E7%90%86-%E4%BA%8C/"/>
    <id>http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E6%88%90%E6%9C%AC%E7%AE%A1%E7%90%86-%E4%BA%8C/</id>
    <published>2020-01-21T01:49:44.000Z</published>
    <updated>2020-03-06T07:02:54.960Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><p><strong>成本控制的内容：</strong></p><p><img src="https://s2.ax1x.com/2020/03/06/3qNqu8.jpg" alt="3qNqu8.jpg"></p><p><strong>控制成本</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.项目管理计划 2.项目资金需求 3.工作绩效数据 4.组织</td><td>1.挣值管理 2.预测 3.完工尚需绩效指数 4.绩效审查 5.项目管理软件 6.储备分析</td><td>1.工作绩效信息 2.成本预测 3.变更请求 4.项目管理计划 5.项目文件更新 6.组织过程资产更新</td></tr></tbody></table><p><strong>挣值管理</strong></p><p>综合了范围 时间 成本绩效测量的方法</p><table><thead><tr><th>术语</th><th>解释</th><th>举例</th></tr></thead><tbody><tr><td>计划价值BAC</td><td>项目完工预算(不含管理储备)</td><td>规划10天种100棵树 10<em>100</em>10 =10000</td></tr><tr><td>实际成本AC</td><td>已完成工作的实际成本</td><td>实际种30棵 但是花费4500</td></tr><tr><td>计划价值PV</td><td>应完成工作的计划价值</td><td>第五天结束，应为50棵 50*1000=5000块</td></tr><tr><td>挣值EV</td><td>实际已完成工作的计划价值</td><td>已种30棵 单价100 30*100=3000</td></tr><tr><td>进度偏差SV</td><td>EV-PV 小于0 进度落后 大于0进度超前</td><td>–</td></tr><tr><td>进度绩效指数SPI</td><td>EV/PV 小于1 落后 大于1提前</td><td>–</td></tr><tr><td>成本偏差</td><td>EV-AC 小于0 超支 大于0节约</td><td>–</td></tr><tr><td>成本绩效指数CPI</td><td>EV/AC 小于1 超支 大于1节约</td><td>–</td></tr><tr><td>ETC（非典型）</td><td>完工尚需估算(非典型的特殊情况，以后不会发生) ETC = BAC-EV</td><td>10000-3000</td></tr><tr><td>EAC</td><td>完工估算 EAC = AC +ETC</td><td>4500+ETC</td></tr><tr><td>ETC(典型)</td><td>ETC= (BAC-EV)/CPI CPI = EV/AC</td><td>(10000-3000)/0.6667 7000*4500/3000</td></tr><tr><td>EAC</td><td>EAC = AC+ETC 快速公式 EAC = BAC/CPI</td><td>–</td></tr><tr><td>TCPI（按原预算）</td><td>（BAC-EV）/ (BAC-AC) &gt;1 难完成 =1 完成 &lt;1 容易完成</td><td>（10000-3000）/ (10000-4500) 大于1 难完成 绩效水平需要到达1.27倍</td></tr><tr><td>TCPI(按新估算)</td><td>（BAC-EV）/ (EAC-AC) &gt;1 难完成 =1 完成 &lt;1 容易完成</td><td>情况1 非典型 （10000-3000）/(11500-4500) 情况2 典型 （10000-3000）/ (14999-4500)</td></tr></tbody></table><p>记忆口诀：</p><p>不管是成本还是进度 小于就不是好事 进度落后 成本超支</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;成本控制的内容：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/03/06
      
    
    </summary>
    
    
      <category term="信息系统项目管理" scheme="http://www.ljchengx.cn/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="成本" scheme="http://www.ljchengx.cn/tags/%E6%88%90%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>项目成本管理(一)</title>
    <link href="http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E6%88%90%E6%9C%AC%E7%AE%A1%E7%90%86-%E4%B8%80/"/>
    <id>http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E6%88%90%E6%9C%AC%E7%AE%A1%E7%90%86-%E4%B8%80/</id>
    <published>2020-01-21T01:48:09.000Z</published>
    <updated>2020-03-06T07:02:14.442Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><p><strong>成本失控的原因：</strong></p><p>1.对项目认识不足</p><p>2.组织制度不完善</p><p>3.方法问题</p><p>4.技术的制约</p><p>5.需求管理不当</p><p>成本类型：</p><ul><li>可变成本 材料</li><li>固定成本 折旧</li><li>直接成本 工资 团队差旅费 物料 设备</li><li>间接成本 分摊 税金 额外福利 保卫费用</li><li>机会成本</li><li>沉没成本 历史成本 对现有决策而言是不可控成本</li></ul><p>学习曲线：重复生成产品时 产品的单位成本会随着产量扩大呈规律性递减</p><p><strong>规划成本管理</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.项目管理计划 2.项目章程 3.事业 3.组织</td><td>1.专家判断 2.分析技术 3.会议</td><td>1.成本管理计划</td></tr></tbody></table><p><strong>估算成本：</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.成本管理计划 2.人力资源管理计划 3.范围基准 4.项目进度计划 5.风险登记册 6.事业 7.组织</td><td>1.专家判断 2.类比估算 3.参数估算 4.自下而上估算 5.三点估算 6.储备分析 7.质量成本 8.项目管理估算软件 9.卖方投标分析 10群体决策技术</td><td>1.活动成本估算 2.估算依据 3.项目文件更新</td></tr></tbody></table><p>[<img src="https://s2.ax1x.com/2020/03/06/3qNhAH.jpg" alt="3qNhAH.jpg">]</p><p>类比:</p><p>简单易行 自上而下 耗时小 成本低</p><p>参数：</p><p>取决历史数据</p><p>卖方投标协议：</p><p>根据卖方的投标情况 分析成本</p><p><strong>制定预算</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.成本管理计划 2.范围基准 3.活动成本估算 4.估算依据 5.项目进度计划 6.资源日历 7.风险登记册 8.协议 9.组织</td><td>1.成本汇总 2.储备分析 3.专家判断 4.历史关系 5.资金限制平衡</td><td>1.成本基准 2.项目资金需求 3.项目文件更新</td></tr></tbody></table><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;成本失控的原因：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1.对项目认识不足&lt;/p&gt;&lt;p&gt;2.组织制度不完善&lt;/p&gt;&lt;p&gt;3.方法问题&lt;/
      
    
    </summary>
    
    
      <category term="信息系统项目管理" scheme="http://www.ljchengx.cn/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="成本" scheme="http://www.ljchengx.cn/tags/%E6%88%90%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>项目质量管理(二)</title>
    <link href="http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E8%B4%A8%E9%87%8F%E7%AE%A1%E7%90%86-%E4%BA%8C/"/>
    <id>http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E8%B4%A8%E9%87%8F%E7%AE%A1%E7%90%86-%E4%BA%8C/</id>
    <published>2020-01-21T01:43:51.000Z</published>
    <updated>2020-03-06T05:44:27.382Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><p><strong>控制质量</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.项目管理计划 2.质量测量指标 3.质量核对单 4.工作绩效数据 5.批准的变更请求 6.可交付成果 7.项目文件 8.组织</td><td>1.老七工具 2.统计抽样 3.检查 4.审查已批准的变更请求</td><td>1.质量控制测量结果 2.确认的变更 3.核实的可交付成果 4.工作绩效信息 5.变更请求 6.项目管理计划更新 7.项目文件更新 8.组织过程资产的更新</td></tr></tbody></table><p><strong>老七工具：</strong></p><p>因果图(鱼骨图) ：分析原因 识别问题 找根本原因</p><p><img src="https://s2.ax1x.com/2020/03/06/3qkQnU.jpg" alt="3qkQnU.jpg"></p><p>流程图：</p><p>SIPOC模型 有助于了解和估算一个过程的质量成本</p><p><img src="https://s2.ax1x.com/2020/03/06/3qkEkj.jpg" alt="3qkEkj.jpg"></p><p>核查表：</p><p>产品出现质量问题的原因统计</p><p><img src="https://s2.ax1x.com/2020/03/06/3qkVts.jpg" alt="3qkVts.jpg"></p><p>帕累托图：</p><p>又称排列图 二八原理 20%的原因 造成80%的问题 找出和解决主要原因</p><p><img src="https://s2.ax1x.com/2020/03/06/3qkn10.jpg" alt="3qkn10.jpg"></p><p>直方图：排列明细</p><p>控制图：</p><p><img src="https://s2.ax1x.com/2020/03/06/3qkZhn.jpg" alt="3qkZhn.jpg"></p><p>散点图：</p><p><img src="https://s2.ax1x.com/2020/03/06/3qkKXT.jpg" alt="3qkKXT.jpg"></p><p><strong>新七工具</strong></p><p>1.亲和图 针对某个问题 形成有组织的想法 形成各种创意或者问题解决方法</p><p>2.过程决策程序 用于理解目标与达成它的步骤之间关系</p><p>3.关联图 有助于在包含相互交叉逻辑关系中等复杂情形中创新地解决问题</p><p>4.树形图 层次分解形式 直观展示</p><p>5.优先矩阵图 识别关键事项和合适的备选方案 通过一系列决策 排列优先顺序</p><p>6.活动网络图 AOA (双) AON(单)</p><p>7.矩阵图 在行列交叉的位置展示因素 原因和目标之间的关系强弱</p><p>做题记录:</p><p>1.质量计划编制阶段的输出包括为质量管理计划，质量度量指标，质量检查单，过程改进计划，更新的项目管理计划。</p><p>2.基准分析是质量计划编制过程常用的工具和技术。</p><p>3.质量计划是为具体产品，项目，服务和合同准备的。</p><p>4.在质量管理的循环中。P阶段包括明确质量要求和目标，提出质量管理方案。</p><p>5.在质量规划中，实验设计是一种统计分析技术，可用来帮助人们识别并找出哪些变量对项目的结果影响最大。</p><p>6.找根本原因，就用因果图。</p><p>7.在六西格玛管理法中。西格玛的值越大，过程故障率越低。</p><p>8.系统开发过程中，设计评审属于质量控制工作。</p><p>9.质量保证说明书，在所有的项目中要提供项目内部和项目外部的质量保证，其目的是说明项目满足相关质量标准的保证能力。</p><p>10.识别相关质量标准是编制质量规划的首要的工作。</p><p>11.确定是用于项目的质量标准，并决定如何满足这些标准是质量计划的过程。</p><p>12.因果分析可以作为项目质量控制中问题识别和问题分析的工具。</p><p>13.质量控制方法中,控制图可以用来分析过程是否稳定，是否发生了异常情况。鱼骨图直观地反映了项目中可能出现的问题与各种潜在原因之间的关系。</p><p>14.新七工具中过程决策程序图适用于理解一个目标与达成此目标步骤之间的关系。</p><p>15.质量保证，旨在建立对未来输出或正在进行的工作完成，是满足特定的需求和期望的信心。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;控制质量&lt;/strong&gt;&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;输入&lt;/th&gt;&lt;th&gt;工具与技术&lt;/th&gt;&lt;th&gt;
      
    
    </summary>
    
    
      <category term="信息系统项目管理" scheme="http://www.ljchengx.cn/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="质量" scheme="http://www.ljchengx.cn/tags/%E8%B4%A8%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>项目质量管理(一)</title>
    <link href="http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E8%B4%A8%E9%87%8F%E7%AE%A1%E7%90%86-%E4%B8%80/"/>
    <id>http://www.ljchengx.cn/2020/01/21/%E9%A1%B9%E7%9B%AE%E8%B4%A8%E9%87%8F%E7%AE%A1%E7%90%86-%E4%B8%80/</id>
    <published>2020-01-21T01:40:42.000Z</published>
    <updated>2020-03-06T03:29:46.163Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --><p><strong>PDCA 戴明环</strong></p><p>P:计划</p><p>明确目标 确定方案</p><p>分析现状</p><p>找出原因</p><p>确定主因</p><p>制定方案措施</p><p>D:实施 执行</p><p>C:检查</p><p>A：行动 修正 总结 标准化</p><p><strong>质量管理标准体系：ISO9000</strong></p><p>八项基本原则：</p><p>1.以顾客为中心</p><p>2.领导作用</p><p>3.全员参与</p><p>4.过程方法</p><p>5.管理的系统方法</p><p>6.持续改进</p><p>7.基于事实的决策方法</p><p>8.与供方互利的关系</p><p><strong>全面质量管理</strong></p><p>4个组成要素：结构 技术 人员 变革推动者</p><p>4个核心特征：全员 全过程 全面方法 全面结构</p><p><strong>六西格玛：</strong></p><p><img src="https://s2.ax1x.com/2020/03/06/3b4M1f.jpg" alt="3b4M1f.jpg"></p><p><strong>规划质量管理</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.项目管理计划 2.干系人登记册 3.风险登记册 4.需求文件 5.事业 6.组织</td><td>1.成本收益分析 2.质量成本 3.七种基本质量工具 4.标杆对照 5.实验设计 6.统计抽样 7.其他</td><td>1.质量管理计划 2.过程改进计划 3.质量测量指标 4.质量核对单 5.项目文件更新</td></tr></tbody></table><p>1.成本收益分析</p><p><img src="https://s2.ax1x.com/2020/03/06/3b4K9P.jpg" alt="3b4K9P.jpg"></p><p>2.质量成本</p><p><img src="https://s2.ax1x.com/2020/03/06/3b4nht.jpg" alt="3b4nht.jpg"></p><p><strong>实施质量保证</strong></p><table><thead><tr><th>输入</th><th>工具与技术</th><th>输出</th></tr></thead><tbody><tr><td>1.质量管理计划 2.过程改进计划 3.质量测量指标 4.质量控制测量结果 5.项目文件</td><td>1.质量管理和控制工具 2.质量审计 3.过程分析</td><td>1.变更请求 2.项目管理计划更新 3.项目文件更新 4.组织过程资产更新</td></tr></tbody></table><p>质量保证：QA</p><p>通过规划过程预防缺陷或者在执行阶段对正在进行的工作检查出缺陷来保证</p><p>一致性工作(预防、评估)</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Mar 23 2020 08:37:19 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;PDCA 戴明环&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;P:计划&lt;/p&gt;&lt;p&gt;明确目标 确定方案&lt;/p&gt;&lt;p&gt;分析现状&lt;/p&gt;&lt;p&gt;找出
      
    
    </summary>
    
    
      <category term="信息系统项目管理" scheme="http://www.ljchengx.cn/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="质量" scheme="http://www.ljchengx.cn/tags/%E8%B4%A8%E9%87%8F/"/>
    
  </entry>
  
</feed>
